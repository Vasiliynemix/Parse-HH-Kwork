from dataclasses import dataclass

from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder


@dataclass
class ReplyKeyboard:
    @staticmethod
    def get_start_kb():
        start_kb = [
            [KeyboardButton(text='–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–∞—Ä—Å–µ—Ä')]
        ]
        return ReplyKeyboardMarkup(keyboard=start_kb,
                                   resize_keyboard=True,
                                   input_field_placeholder='–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –∑–∞–ø—É—Å–∫–∞üëá',
                                   one_time_keyboard=True)

    @staticmethod
    def get_cancel_kb():
        cancel_kb = [
            [KeyboardButton(text='–ù–∞–∑–∞–¥')],
            [KeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É')]
        ]
        return ReplyKeyboardMarkup(keyboard=cancel_kb,
                                   resize_keyboard=True,
                                   input_field_placeholder='–µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —á—Ç–æ-—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"üëá',
                                   one_time_keyboard=True)

    @staticmethod
    def get_prev_cancel_kb():
        cancel_kb = [
            [KeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É')]
        ]
        return ReplyKeyboardMarkup(keyboard=cancel_kb,
                                   resize_keyboard=True,
                                   input_field_placeholder='–µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ "–û—Ç–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É"üëá',
                                   one_time_keyboard=True)

    @staticmethod
    def get_result_settings():
        get_result_kb = [
            [KeyboardButton(text='–í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä—Å–µ—Ä–∞')],
            [KeyboardButton(text='–ù–∞–∑–∞–¥'), KeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É')],
        ]
        return ReplyKeyboardMarkup(keyboard=get_result_kb,
                                   resize_keyboard=True,
                                   input_field_placeholder='–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µüëá',
                                   one_time_keyboard=True)

    @staticmethod
    def get_result_doc():
        get_doc_kb = [
            [KeyboardButton(text='–ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µüëá')]
        ]
        return ReplyKeyboardMarkup(keyboard=get_doc_kb,
                                   resize_keyboard=True,
                                   input_field_placeholder='–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µüëá',
                                   one_time_keyboard=True)


@dataclass
class InlineKeyboard:
    @staticmethod
    def run_parse():
        run_ikb = InlineKeyboardBuilder()
        run_ikb.button(text='–ó–∞–ø—É—Å–∫!', callback_data='run_parse')
        run_ikb.adjust(1)
        return run_ikb.as_markup(resize_keyboard=True,
                                 one_time_keyboard=True)


@dataclass
class Keyboard:
    kb: ReplyKeyboard() = ReplyKeyboard
    ikb: InlineKeyboard() = InlineKeyboard


keyboard: Keyboard = Keyboard()
